From e8d8b8390d0b236d5aef428b7bec3da69d566f63 Mon Sep 17 00:00:00 2001
From: Michal Simek <monstr@monstr.eu>
Date: Mon, 10 May 2010 12:09:43 +0200
Subject: [PATCH] ll_temac: Fix mtu change function when device is not open

xenet_change_mtu doesn't take care about current device state.
Adding checking mechanism about currect device state
solve it.

Replicate this error:
ifconfig eth0 down
ifconfig eth0 mtu 2000

Signed-off-by: Michal Simek <monstr@monstr.eu>
---
 drivers/net/xilinx_lltemac/xlltemac_main.c |    9 +++++++--
 1 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/drivers/net/xilinx_lltemac/xlltemac_main.c b/drivers/net/xilinx_lltemac/xlltemac_main.c
index 1c3d488..9a14bcc 100644
--- a/drivers/net/xilinx_lltemac/xlltemac_main.c
+++ b/drivers/net/xilinx_lltemac/xlltemac_main.c
@@ -1318,6 +1318,7 @@ static void free_descriptor_skb(struct net_device *dev);
 static int xenet_change_mtu(struct net_device *dev, int new_mtu)
 {
 	int result;
+	int device_enable = 0;
 #ifdef CONFIG_XILINX_GIGE_VLAN
 	int head_size = XTE_HDR_VLAN_SIZE;
 #else
@@ -1339,7 +1340,10 @@ static int xenet_change_mtu(struct net_device *dev, int new_mtu)
 	dev->mtu = new_mtu;	/* change mtu in net_device structure */
 
 	/* stop driver */
-	xenet_close(dev);
+	if (netif_running(dev)) {
+		device_enable = 1;
+		xenet_close(dev);
+	}
 	/* free all created descriptors for previous size */
 	free_descriptor_skb(dev);
 	/* setup new frame size */
@@ -1352,7 +1356,8 @@ static int xenet_change_mtu(struct net_device *dev, int new_mtu)
 		return -EINVAL;
 	}
 
-	xenet_open(dev); /* open the device */
+	if (device_enable)
+		xenet_open(dev); /* open the device */
 	return 0;
 }
 
-- 
1.7.0.4

