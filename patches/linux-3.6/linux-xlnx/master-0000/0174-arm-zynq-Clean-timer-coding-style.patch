From 908b3deda87286220b6c488ae09c0e6c1ef55b47 Mon Sep 17 00:00:00 2001
From: Michal Simek <monstr@monstr.eu>
Date: Mon, 22 Oct 2012 10:38:18 +0200
Subject: [PATCH] arm: zynq: Clean timer coding style

Coding style cleanup and synchronization with petalinux.

Signed-off-by: Michal Simek <monstr@monstr.eu>
---
 arch/arm/mach-zynq/timer.c |   14 +++++++-------
 1 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/arch/arm/mach-zynq/timer.c b/arch/arm/mach-zynq/timer.c
index 38faf0f..e0efd9e 100644
--- a/arch/arm/mach-zynq/timer.c
+++ b/arch/arm/mach-zynq/timer.c
@@ -24,8 +24,9 @@
 #include <linux/clockchips.h>
 #include <linux/io.h>
 #include <linux/of.h>
-#include <linux/of_address.h>
 #include <linux/of_irq.h>
+#include <linux/of_address.h>
+
 #include <linux/clk.h>
 #include <linux/err.h>
 
@@ -159,7 +160,7 @@ static void __init xttcpss_timer_hardware_init(void)
 	 */
 	__raw_writel(0x0, timers[XTTCPSS_CLOCKSOURCE].base_addr +
 				XTTCPSS_IER_OFFSET);
-	__raw_writel(CLK_CNTRL_PRESCALE, 
+	__raw_writel(CLK_CNTRL_PRESCALE,
 			timers[XTTCPSS_CLOCKSOURCE].base_addr +
 			XTTCPSS_CLK_CNTRL_OFFSET);
 	__raw_writel(0x10, timers[XTTCPSS_CLOCKSOURCE].base_addr +
@@ -171,8 +172,8 @@ static void __init xttcpss_timer_hardware_init(void)
 	 */
 	__raw_writel(0x23, timers[XTTCPSS_CLOCKEVENT].base_addr +
 			XTTCPSS_CNT_CNTRL_OFFSET);
-	__raw_writel(CLK_CNTRL_PRESCALE, 
-			timers[XTTCPSS_CLOCKEVENT].base_addr + 
+	__raw_writel(CLK_CNTRL_PRESCALE,
+			timers[XTTCPSS_CLOCKEVENT].base_addr +
 			XTTCPSS_CLK_CNTRL_OFFSET);
 	__raw_writel(0x1, timers[XTTCPSS_CLOCKEVENT].base_addr +
 			XTTCPSS_IER_OFFSET);
@@ -340,7 +341,7 @@ static void __init xttcpss_timer_init(void)
 	struct clk *clk;
 
 	/* Get the 1st Triple Timer Counter (TTC) block from the device tree
-	 * and use it, but if missing use some defaults for now to help the 
+	 * and use it, but if missing use some defaults for now to help the
 	 * transition, note that the event timer uses the interrupt and it's the
 	 * 2nd TTC hence the +1 for the interrupt and the irq_of_parse_and_map(,1)
 	 */
@@ -352,7 +353,7 @@ static void __init xttcpss_timer_init(void)
 	        WARN_ON(!irq);
 
 		/* For now, let's play nice and not crash the kernel if the device
-		   tree was not updated to have all the timer irqs, this can be 
+		   tree was not updated to have all the timer irqs, this can be
 		   removed at a later date when old device trees are gone.
 		*/
 		if (irq == NO_IRQ) {
@@ -433,7 +434,6 @@ static void __init xttcpss_timer_init(void)
 	xttcpss_clockevent.cpumask = cpumask_of(0);
 	clockevents_config_and_register(&xttcpss_clockevent,
 			timers[XTTCPSS_CLOCKEVENT].frequency, 1, 0xfffe);
-
 #ifdef CONFIG_HAVE_ARM_TWD
 	twd_local_timer_of_register();
 #endif
-- 
1.7.0.4

