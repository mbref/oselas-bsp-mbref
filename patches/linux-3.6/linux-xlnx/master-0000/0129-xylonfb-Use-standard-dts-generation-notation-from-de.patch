From 4464257c10ffae5d91a64119907f64ca7f9fb261 Mon Sep 17 00:00:00 2001
From: Michal Simek <monstr@monstr.eu>
Date: Fri, 19 Oct 2012 11:57:51 +0200
Subject: [PATCH] xylonfb: Use standard dts generation notation from device-tree bsp

Device-tree BSP generates standard names in format xlnx,<name>.
Also driver compatible property is generated in that way.

Signed-off-by: Michal Simek <monstr@monstr.eu>
---
 drivers/video/xylon/xylonfb/of/xylonfb-of.c |   21 +++++++++++----------
 1 files changed, 11 insertions(+), 10 deletions(-)

diff --git a/drivers/video/xylon/xylonfb/of/xylonfb-of.c b/drivers/video/xylon/xylonfb/of/xylonfb-of.c
index 1dd86b1..2349df5 100644
--- a/drivers/video/xylon/xylonfb/of/xylonfb-of.c
+++ b/drivers/video/xylon/xylonfb/of/xylonfb-of.c
@@ -47,14 +47,14 @@ static int xylonfb_parse_vram_info(struct device_node *np,
 	u32 const *prop;
 	int size;
 
-	prop = of_get_property(np, "vmem-baseaddr", &size);
+	prop = of_get_property(np, "xlnx,vmem-baseaddr", &size);
 	if (!prop) {
 		pr_err("Error xylonfb getting VRAM address begin\n");
 		return -EINVAL;
 	}
 	*vmem_base_addr = be32_to_cpup(prop);
 
-	prop = of_get_property(np, "vmem-highaddr", &size);
+	prop = of_get_property(np, "xlnx,vmem-highaddr", &size);
 	if (!prop) {
 		pr_err("Error xylonfb getting VRAM address end\n");
 		return -EINVAL;
@@ -72,14 +72,14 @@ static int xylonfb_parse_layer_info(struct device_node *np,
 	int size;
 	char bg_layer_name[25];
 
-	prop = of_get_property(np, "num-of-layers", &size);
+	prop = of_get_property(np, "xlnx,num-of-layers", &size);
 	if (!prop) {
 		pr_err("Error getting number of layers\n");
 		return -EINVAL;
 	}
 	layers = be32_to_cpup(prop);
 
-	prop = of_get_property(np, "use-background", &size);
+	prop = of_get_property(np, "xlnx,use-background", &size);
 	if (!prop) {
 		pr_err("Error getting use background\n");
 		return -EINVAL;
@@ -87,7 +87,7 @@ static int xylonfb_parse_layer_info(struct device_node *np,
 	if (be32_to_cpup(prop) == 1) {
 		layers--;
 
-		sprintf(bg_layer_name, "layer-%d-data-width", layers);
+		sprintf(bg_layer_name, "xlnx,layer-%d-data-width", layers);
 		prop = of_get_property(np, bg_layer_name, &size);
 		if (!prop)
 			bg_bpp = 16;
@@ -96,7 +96,7 @@ static int xylonfb_parse_layer_info(struct device_node *np,
 		if (bg_bpp == 24)
 			bg_bpp = 32;
 
-		sprintf(bg_layer_name, "layer-%d-alpha-mode", layers);
+		sprintf(bg_layer_name, "xlnx,layer-%d-alpha-mode", layers);
 		prop = of_get_property(np, bg_layer_name, &size);
 		if (!prop) {
 			bg_alpha_mode = LOGICVC_LAYER_ALPHA;
@@ -135,22 +135,22 @@ static int xylonfb_parse_vmode_info(struct device_node *np,
 	}
 
 	pix_data_invert = 0;
-	prop = of_get_property(dn, "pixel-data-invert", &size);
+	prop = of_get_property(dn, "xlnx,pixel-data-invert", &size);
 	if (!prop)
 		pr_err("Error getting pixel data invert\n");
 	else
 		pix_data_invert = be32_to_cpup(prop);
 	pix_clk_act_high = 0;
-	prop = of_get_property(dn, "pixel-clock-active-high", &size);
+	prop = of_get_property(dn, "xlnx,pixel-clock-active-high", &size);
 	if (!prop)
 		pr_err("Error getting pixel active edge\n");
 	else
 		pix_clk_act_high = be32_to_cpup(prop);
 
-	prop = of_get_property(dn, "pixel-component-format", &size);
+	prop = of_get_property(dn, "xlnx,pixel-component-format", &size);
 	if (prop) {
 		if (!strcmp("ABGR", (char *)prop)) {
-			prop = of_get_property(dn, "pixel-component-layer", &size);
+			prop = of_get_property(dn, "xlnx,pixel-component-layer", &size);
 			if (prop) {
 				while(size > 0) {
 					tmp = be32_to_cpup(prop);
@@ -378,6 +378,7 @@ static int xylonfb_of_remove(struct platform_device *pdev)
 
 static struct of_device_id xylonfb_of_match[] __devinitdata = {
 	{ .compatible = "xylon,logicvc-2.05.c" },
+	{ .compatible = "xlnx,logicvc-2.05.c" },
 	{/* end of table */},
 };
 MODULE_DEVICE_TABLE(of, xylonfb_of_match);
-- 
1.7.1

