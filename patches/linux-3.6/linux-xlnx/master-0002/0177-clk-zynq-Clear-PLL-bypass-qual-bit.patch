From 10c3c526fe7efda9caaeccbedc58d6e6b3d7e1ca Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Fri, 7 Sep 2012 07:45:38 -0700
Subject: [PATCH] clk: zynq: Clear PLL bypass qual bit

In order to being able to bypass the PLL the bypass qual bit
in the PLL control register must be cleared. This patch adds
clearing the bit during clock registration.

Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
---
 drivers/clk/zynq/pll.c |   11 +++++++++++
 1 files changed, 11 insertions(+), 0 deletions(-)

diff --git a/drivers/clk/zynq/pll.c b/drivers/clk/zynq/pll.c
index b1ddeae..639c4bf 100644
--- a/drivers/clk/zynq/pll.c
+++ b/drivers/clk/zynq/pll.c
@@ -57,6 +57,7 @@ struct zynq_pll {
 #define PLLCTRL_FBDIV_SHIFT	12
 #define PLLCTRL_BYPASS_MASK	0x10
 #define PLLCTRL_BYPASS_SHIFT	4
+#define PLLCTRL_BPQUAL_MASK	(1 << 3)
 #define PLLCTRL_PWRDWN_MASK	2
 #define PLLCTRL_PWRDWN_SHIFT	1
 #define PLLCTRL_RESET_MASK	1
@@ -380,6 +381,8 @@ struct clk *clk_register_zynq_pll(const char *name, void __iomem *pllctrl,
 		void __iomem *pllcfg, void __iomem *pllstatus, u8 lockbit)
 {
 	struct zynq_pll *clk;
+	u32 reg;
+	unsigned long flags = 0;
 	const char *pnames[] = {"PS_CLK"};
 	spinlock_t *lock;
 	struct clk_init_data initd = {
@@ -417,5 +420,13 @@ struct clk *clk_register_zynq_pll(const char *name, void __iomem *pllctrl,
 	else
 		clk->bypassed = 0;
 
+	spin_lock_irqsave(clk->lock, flags);
+
+	reg = readl(clk->pllctrl);
+	reg &= ~PLLCTRL_BPQUAL_MASK;
+	writel(reg, clk->pllctrl);
+
+	spin_unlock_irqrestore(clk->lock, flags);
+
 	return clk_register(NULL, &clk->hw);
 }
-- 
1.7.1

