From 170645c7edc1655eaff2e67695ddda9c61bf02ad Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Fri, 1 Feb 2013 10:42:52 +0100
Subject: [PATCH] arm: zynq: Coding style cleanup platsmp.c

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 arch/arm/mach-zynq/common.h  |    3 +++
 arch/arm/mach-zynq/platsmp.c |    8 ++------
 2 files changed, 5 insertions(+), 6 deletions(-)

diff --git a/arch/arm/mach-zynq/common.h b/arch/arm/mach-zynq/common.h
index 1631a45..ce93247 100644
--- a/arch/arm/mach-zynq/common.h
+++ b/arch/arm/mach-zynq/common.h
@@ -29,4 +29,7 @@ static inline void xilinx_system_reset(char mode, const char *cmd)
 	xslcr_system_reset();
 }
 
+/* multiplatform use core.h for this purpose */
+extern void secondary_startup(void);
+
 #endif
diff --git a/arch/arm/mach-zynq/platsmp.c b/arch/arm/mach-zynq/platsmp.c
index f4ffd5d..e5cbf29 100644
--- a/arch/arm/mach-zynq/platsmp.c
+++ b/arch/arm/mach-zynq/platsmp.c
@@ -28,8 +28,6 @@
 #include <mach/zynq_soc.h>
 #include "common.h"
 
-extern void secondary_startup(void);
-
 static DEFINE_SPINLOCK(boot_lock);
 
 /* Store pointer to ioremap area which points to address 0x0 */
@@ -124,8 +122,7 @@ int __cpuinit zynq_cpun_start(u32 address, int cpu)
 		 */
 		if (address) {
 			if (!zero) {
-				printk(KERN_WARNING
-					"BOOTUP jump vectors is not mapped!\n");
+				pr_warn("BOOTUP jump vectors is not mapped!\n");
 				return -1;
 			}
 			mem_backup[0] = __raw_readl(zero + 0x0);
@@ -212,8 +209,7 @@ void __init platform_smp_prepare_cpus(unsigned int max_cpus)
 #if defined(CONFIG_PHYS_OFFSET) && (CONFIG_PHYS_OFFSET != 0)
 	zero = ioremap(0, 12);
 	if (!zero) {
-		printk(KERN_WARNING
-			"!!!! BOOTUP jump vectors can't be used !!!!\n");
+		pr_warn("!!!! BOOTUP jump vectors can't be used !!!!\n");
 		while (1)
 			;
 	}
-- 
1.7.1

