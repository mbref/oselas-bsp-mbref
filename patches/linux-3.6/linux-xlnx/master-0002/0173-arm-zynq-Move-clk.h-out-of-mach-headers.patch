From 270f9ff3bd307b81ab21697d39655aa19587582a Mon Sep 17 00:00:00 2001
From: Michal Simek <michal.simek@xilinx.com>
Date: Tue, 29 Jan 2013 14:56:40 +0100
Subject: [PATCH] arm: zynq: Move clk.h out of mach headers

The patch is the part of moving to MULTIPLATFORM.

Signed-off-by: Michal Simek <michal.simek@xilinx.com>
---
 arch/arm/mach-zynq/common.c           |    1 +
 arch/arm/mach-zynq/include/mach/clk.h |   39 ---------------------------------
 arch/arm/mach-zynq/slcr.c             |    2 +-
 drivers/clk/zynq/clk.c                |    2 +-
 drivers/clk/zynq/clk621.c             |    2 +-
 drivers/clk/zynq/peripheral_clk.c     |    2 +-
 drivers/clk/zynq/pll.c                |    2 +-
 include/linux/clk/zynq.h              |   39 +++++++++++++++++++++++++++++++++
 8 files changed, 45 insertions(+), 44 deletions(-)
 delete mode 100644 arch/arm/mach-zynq/include/mach/clk.h
 create mode 100644 include/linux/clk/zynq.h

diff --git a/arch/arm/mach-zynq/common.c b/arch/arm/mach-zynq/common.c
index a79cdd7..3c578f3 100644
--- a/arch/arm/mach-zynq/common.c
+++ b/arch/arm/mach-zynq/common.c
@@ -36,6 +36,7 @@
 
 #include <mach/zynq_soc.h>
 #include "common.h"
+#include <linux/clk/zynq.h>
 
 static const struct of_device_id zynq_dt_irq_match[] __initconst = {
 	{ .compatible = "arm,cortex-a9-gic", .data = gic_of_init },
diff --git a/arch/arm/mach-zynq/include/mach/clk.h b/arch/arm/mach-zynq/include/mach/clk.h
deleted file mode 100644
index 6505a8e..0000000
--- a/arch/arm/mach-zynq/include/mach/clk.h
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- *  Copyright (C) 2012 Xilinx
- *
- * This software is licensed under the terms of the GNU General Public
- * License version 2, as published by the Free Software Foundation, and
- * may be copied, distributed, and modified under those terms.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- */
-
-#ifndef __MACH_CLK__H__
-#define __MACH_CLK__H__
-
-void zynq_clock_init(void __iomem *slcr_base);
-
-struct clk *clk_register_zynq_gd1m(const char *name,
-		void __iomem *clkctrl, const char **pnames,
-		spinlock_t *lock);
-struct clk *clk_register_zynq_gd2m(const char *name,
-		void __iomem *clkctrl, const char **pnames, u8 num_parents,
-		spinlock_t *lock);
-struct clk *clk_register_zynq_d2m(const char *name,
-		void __iomem *clkctrl, const char **pnames, spinlock_t *lock);
-struct clk *clk_register_zynq_d1m(const char *name,
-		void __iomem *clkctrl, const char **pnames, u8 num_parents,
-		spinlock_t *lock);
-
-struct clk *clk_register_zynq_pll(const char *name, void __iomem *pllctrl,
-		void __iomem *pllcfg, void __iomem *pllstatus, u8 lockbit);
-
-struct clk *clk_register_zynq_clk621(const char *name,
-		void __iomem *clkctrl, void __iomem *clk621,
-		unsigned int basediv,
-		unsigned int divadd, const char **pnames, u8 num_parents,
-		spinlock_t *lock);
-#endif
diff --git a/arch/arm/mach-zynq/slcr.c b/arch/arm/mach-zynq/slcr.c
index 2554320..ee7dd27 100644
--- a/arch/arm/mach-zynq/slcr.c
+++ b/arch/arm/mach-zynq/slcr.c
@@ -27,7 +27,7 @@
 #include <linux/slab.h>
 #include <linux/string.h>
 #include <mach/slcr.h>
-#include <mach/clk.h>
+#include <linux/clk/zynq.h>
 
 #define DRIVER_NAME "xslcr"
 
diff --git a/drivers/clk/zynq/clk.c b/drivers/clk/zynq/clk.c
index 46f904d..ffc1c3a 100644
--- a/drivers/clk/zynq/clk.c
+++ b/drivers/clk/zynq/clk.c
@@ -17,7 +17,7 @@
 #include <linux/clk-provider.h>
 #include <linux/clkdev.h>
 #include <linux/of.h>
-#include <mach/clk.h>
+#include <linux/clk/zynq.h>
 
 #define SLCR_ARMPLL_CTRL		(slcr_base + 0x100)
 #define SLCR_DDRPLL_CTRL		(slcr_base + 0x104)
diff --git a/drivers/clk/zynq/clk621.c b/drivers/clk/zynq/clk621.c
index 1e0dd30..dcf3918 100644
--- a/drivers/clk/zynq/clk621.c
+++ b/drivers/clk/zynq/clk621.c
@@ -20,7 +20,7 @@
 #include <linux/io.h>
 #include <linux/kernel.h>
 #include <linux/slab.h>
-#include <mach/clk.h>
+#include <linux/clk/zynq.h>
 
 /**
  * struct zynq_clk621
diff --git a/drivers/clk/zynq/peripheral_clk.c b/drivers/clk/zynq/peripheral_clk.c
index 2307f56..ea33d68 100644
--- a/drivers/clk/zynq/peripheral_clk.c
+++ b/drivers/clk/zynq/peripheral_clk.c
@@ -25,7 +25,7 @@
 #include <linux/io.h>
 #include <linux/kernel.h>
 #include <linux/slab.h>
-#include <mach/clk.h>
+#include <linux/clk/zynq.h>
 
 /**
  * struct zynq_periph_clk
diff --git a/drivers/clk/zynq/pll.c b/drivers/clk/zynq/pll.c
index ccf94b7..b1ddeae 100644
--- a/drivers/clk/zynq/pll.c
+++ b/drivers/clk/zynq/pll.c
@@ -28,7 +28,7 @@
 #include <linux/io.h>
 #include <linux/kernel.h>
 #include <linux/slab.h>
-#include <mach/clk.h>
+#include <linux/clk/zynq.h>
 
 /**
  * struct zynq_pll
diff --git a/include/linux/clk/zynq.h b/include/linux/clk/zynq.h
new file mode 100644
index 0000000..845a0c5
--- /dev/null
+++ b/include/linux/clk/zynq.h
@@ -0,0 +1,39 @@
+/*
+ *  Copyright (C) 2012 Xilinx
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef __LINUX_CLK_ZYNQ_H_
+#define __LINUX_CLK_ZYNQ_H_
+
+void __init zynq_clock_init(void __iomem *slcr);
+
+struct clk *clk_register_zynq_gd1m(const char *name,
+		void __iomem *clkctrl, const char **pnames,
+		spinlock_t *lock);
+struct clk *clk_register_zynq_gd2m(const char *name,
+		void __iomem *clkctrl, const char **pnames, u8 num_parents,
+		spinlock_t *lock);
+struct clk *clk_register_zynq_d2m(const char *name,
+		void __iomem *clkctrl, const char **pnames, spinlock_t *lock);
+struct clk *clk_register_zynq_d1m(const char *name,
+		void __iomem *clkctrl, const char **pnames, u8 num_parents,
+		spinlock_t *lock);
+
+struct clk *clk_register_zynq_pll(const char *name, void __iomem *pllctrl,
+		void __iomem *pllcfg, void __iomem *pllstatus, u8 lockbit);
+
+struct clk *clk_register_zynq_clk621(const char *name,
+		void __iomem *clkctrl, void __iomem *clk621,
+		unsigned int basediv,
+		unsigned int divadd, const char **pnames, u8 num_parents,
+		spinlock_t *lock);
+#endif
-- 
1.7.1

