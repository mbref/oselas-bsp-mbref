From d1d8c0725267ccd1f0430037b00559f7ef81d22e Mon Sep 17 00:00:00 2001
From: Soren Brinkmann <soren.brinkmann@xilinx.com>
Date: Fri, 4 Jan 2013 10:28:47 -0800
Subject: [PATCH] hwmon: xilinxps: Port driver to COMMON_CLK

Use the common clock framework to manage device clocks.

Signed-off-by: Soren Brinkmann <soren.brinkmann@xilinx.com>
---
 drivers/clk/zynq/clk.c        |    3 ---
 drivers/hwmon/xilinx-xadcps.c |   24 +++++++++++++++++++++++-
 2 files changed, 23 insertions(+), 4 deletions(-)

diff --git a/drivers/clk/zynq/clk.c b/drivers/clk/zynq/clk.c
index 8585e66..0dacc4b 100644
--- a/drivers/clk/zynq/clk.c
+++ b/drivers/clk/zynq/clk.c
@@ -194,9 +194,6 @@ void __init zynq_clock_init(void)
 			(__force void __iomem *)SLCR_PCAP_CLK_CTRL,
 			def_periph_parents, &pcapclk_lock);
 	zynq_clkdev_add(NULL, "PCAP", clk);
-#ifdef CONFIG_SENSORS_XADCPS
-	clk_prepare_enable(clk);
-#endif
 
 	clk = clk_register_zynq_gd2m("GEM0_CLK",
 			(__force void __iomem *)SLCR_GEM0_CLK_CTRL,
diff --git a/drivers/hwmon/xilinx-xadcps.c b/drivers/hwmon/xilinx-xadcps.c
index 30a96e9..78effdd 100644
--- a/drivers/hwmon/xilinx-xadcps.c
+++ b/drivers/hwmon/xilinx-xadcps.c
@@ -17,6 +17,7 @@
  * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
  */
 
+#include <linux/clk.h>
 #include <linux/module.h>
 #include <linux/err.h>
 #include <linux/kernel.h>
@@ -161,6 +162,7 @@ struct xadc_t {
 	struct resource *mem;
 	void __iomem *iobase;
 	int irq;
+	struct clk	*clk;
 	spinlock_t slock;
 	struct list_head runq;
 	struct xadc_batch *curr;
@@ -665,9 +667,22 @@ static int __devinit xadc_probe(struct platform_device *pdev)
 		goto err_io_remap;
 	}
 
+	xadc->clk = clk_get_sys("PCAP", NULL);
+	if (IS_ERR(xadc->clk)) {
+		dev_err(&pdev->dev, "input clock not found\n");
+		ret = PTR_ERR(xadc->clk);
+		goto err_irq;
+	}
+
+	ret = clk_prepare_enable(xadc->clk);
+	if (ret) {
+		dev_err(&pdev->dev, "unable to enable clock\n");
+		goto err_clk_put;
+	}
+
 	ret = sysfs_create_group(&pdev->dev.kobj, &xadc_group);
 	if (ret)
-		goto err_irq;
+		goto err_clk_disable;
 
 	platform_set_drvdata(pdev, xadc);
 
@@ -706,6 +721,10 @@ static int __devinit xadc_probe(struct platform_device *pdev)
 
 err_group:
 	sysfs_remove_group(&pdev->dev.kobj, &xadc_group);
+err_clk_disable:
+	clk_disable_unprepare(xadc->clk);
+err_clk_put:
+	clk_put(xadc->clk);
 err_irq:
 	free_irq(xadc->irq, xadc);
 err_io_remap:
@@ -732,6 +751,9 @@ static int __devexit xadc_remove(struct platform_device *pdev)
 
 	platform_set_drvdata(pdev, NULL);
 
+	clk_disable_unprepare(xadc->clk);
+	clk_put(xadc->clk);
+
 	kfree(xadc);
 
 	return 0;
-- 
1.7.1

