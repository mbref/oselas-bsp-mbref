From b1f60d4ed9cea2170d44c8870aa82c66d561022a Mon Sep 17 00:00:00 2001
From: Michal Simek <monstr@monstr.eu>
Date: Wed, 14 Mar 2012 16:54:13 +0100
Subject: [PATCH] axienet: Fix some compatibility things to get it work on 3.3

Signed-off-by: Michal Simek <monstr@monstr.eu>
---
 drivers/net/ethernet/xilinx/xilinx_axienet_main.c |  112 +--------------------
 1 files changed, 4 insertions(+), 108 deletions(-)

diff --git a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
index 0c8dff2..929188b 100644
--- a/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
+++ b/drivers/net/ethernet/xilinx/xilinx_axienet_main.c
@@ -37,6 +37,7 @@
 #include <linux/mii.h>
 #include <linux/dma-mapping.h>
 #include <linux/io.h>
+#include <linux/interrupt.h>
 
 #include "xilinx_axienet.h"
 
@@ -799,7 +800,7 @@ static int axienet_start_xmit(struct sk_buff *skb, struct net_device *ndev)
 		cur_p = &lp->tx_bd_v[lp->tx_bd_tail];
 		frag = &skb_shinfo(skb)->frags[ii];
 		cur_p->phys = dma_map_single(ndev->dev.parent,
-			(void *)page_address(frag->page) + frag->page_offset,
+			skb_frag_address(frag),
 			frag->size,
 			DMA_TO_DEVICE);
 		cur_p->cntrl = frag->size;
@@ -1204,7 +1205,7 @@ static const struct net_device_ops axienet_netdev_ops = {
 	.ndo_change_mtu	= axienet_change_mtu,
 	.ndo_set_mac_address = netdev_set_mac_address,
 	.ndo_validate_addr = eth_validate_addr,
-	.ndo_set_multicast_list = axienet_set_multicast_list,
+	.ndo_set_rx_mode = axienet_set_multicast_list,
 	.ndo_do_ioctl = axienet_ioctl,
 #ifdef CONFIG_NET_POLL_CONTROLLER
 	.ndo_poll_controller = axienet_poll_controller,
@@ -1341,106 +1342,6 @@ static void axienet_ethtools_get_regs(struct net_device *ndev,
 }
 
 /**
- * axienet_ethtools_get_rx_csum - Get the checksum offload setting on Rx path.
- * @ndev:	Pointer to net_device structure
- *
- * This implements ethtool command for getting the Axi Ethernet checksum
- * offload setting on Rx path. If the core supports either partial or full
- * checksum offload, the function returns a non-zero value.
- * Issue "ethtool -k ethX" under linux prompt to execute this function.
- **/
-static u32 axienet_ethtools_get_rx_csum(struct net_device *ndev)
-{
-	struct axienet_local *lp = netdev_priv(ndev);
-
-	if ((lp->features & XAE_FEATURE_PARTIAL_RX_CSUM) ||
-			(lp->features & XAE_FEATURE_FULL_RX_CSUM))
-		return XAE_FEATURE_PARTIAL_RX_CSUM;
-
-	else
-		return XAE_NO_CSUM_OFFLOAD;
-}
-
-/**
- * axienet_ethtools_set_rx_csum - Enable checksum offloading on Rx path.
- * @ndev:	Pointer to net_device structure
- * @flag:	unsigned long, used to enable/disable checksum offloading.
- *
- * This implements ethtool command for enabling Axi Ethernet checksum
- * offloading. If the core supports full checksum offloading, this function
- * enables/disables full checksum offloading. Similarly it can enable/disable
- * partial checksum offloading.
- * Issue "ethtool -K ethX rx on|off" under linux prompt to execute this
- * function.
- **/
-static int axienet_ethtools_set_rx_csum(struct net_device *ndev, u32 flag)
-{
-	struct axienet_local *lp = netdev_priv(ndev);
-
-	if (lp->csum_offload_on_rx_path & XAE_FEATURE_PARTIAL_RX_CSUM) {
-		if (flag)
-			lp->features |= XAE_FEATURE_PARTIAL_RX_CSUM;
-		else
-			lp->features &= ~XAE_FEATURE_PARTIAL_RX_CSUM;
-	} else if (lp->csum_offload_on_rx_path & XAE_FEATURE_FULL_RX_CSUM) {
-		if (flag)
-			lp->features |= XAE_FEATURE_FULL_RX_CSUM;
-		else
-			lp->features &= ~XAE_FEATURE_FULL_RX_CSUM;
-	}
-
-	return 0;
-}
-
-/**
- * axienet_ethtools_get_tx_csum - Get checksum offloading on Tx path.
- * @ndev:	Pointer to net_device structure
- *
- * This implements ethtool command for getting the Axi Ethernet checksum
- * offload setting on Tx path.
- * Issue "ethtool -k ethX" under linux prompt to execute this function.
- **/
-static u32 axienet_ethtools_get_tx_csum(struct net_device *ndev)
-{
-	struct axienet_local *lp = netdev_priv(ndev);
-
-	if (lp->features & XAE_FEATURE_PARTIAL_TX_CSUM)
-		return ndev->features & NETIF_F_IP_CSUM;
-	else if (lp->features & XAE_FEATURE_FULL_TX_CSUM)
-		return ndev->features & NETIF_F_HW_CSUM;
-	return 0;
-}
-
-/**
- * axienet_ethtools_set_tx_csum - Enable checksum offloading on Tx path.
- * @ndev:	Pointer to net_device structure
- * @flag:	unsigned long, used to enable/disable checksum offloading.
- *
- * This implements ethtool command for setting the Axi Ethernet checksum
- * offload on Tx path.
- * Issue "ethtool -K ethX tx on|off" under linux prompt to execute this
- * function.
- **/
-static int axienet_ethtools_set_tx_csum(struct net_device *ndev, u32 flag)
-{
-	struct axienet_local *lp = netdev_priv(ndev);
-
-	if (lp->csum_offload_on_tx_path & XAE_FEATURE_PARTIAL_TX_CSUM) {
-		if (flag)
-			ndev->features |= NETIF_F_IP_CSUM;
-		else
-			ndev->features &= ~NETIF_F_IP_CSUM;
-	} else if (lp->csum_offload_on_tx_path & XAE_FEATURE_FULL_TX_CSUM) {
-		if (flag)
-			ndev->features |= NETIF_F_HW_CSUM;
-		else
-			ndev->features &= ~NETIF_F_HW_CSUM;
-	}
-
-	return 0;
-}
-
-/**
  * axienet_ethtools_get_pauseparam - Get the pause parameter setting for
  *				     Tx and Rx paths.
  * @ndev:	Pointer to net_device structure
@@ -1587,11 +1488,6 @@ static struct ethtool_ops axienet_ethtool_ops = {
 	.get_regs_len   = axienet_ethtools_get_regs_len,
 	.get_regs       = axienet_ethtools_get_regs,
 	.get_link       = ethtool_op_get_link,       /* ethtool default */
-	.get_rx_csum    = axienet_ethtools_get_rx_csum,
-	.set_rx_csum    = axienet_ethtools_set_rx_csum,
-	.get_tx_csum    = axienet_ethtools_get_tx_csum,
-	.set_tx_csum    = axienet_ethtools_set_tx_csum,
-	.get_sg         = ethtool_op_get_sg,         /* ethtool default */
 	.get_pauseparam = axienet_ethtools_get_pauseparam,
 	.set_pauseparam = axienet_ethtools_set_pauseparam,
 	.get_coalesce   = axienet_ethtools_get_coalesce,
@@ -1914,7 +1810,7 @@ axienet_of_probe(struct platform_device *op)
 
 	of_node_put(np); /* Finished with the DMA node; drop the reference */
 
-	if ((lp->rx_irq == NO_IRQ) || (lp->tx_irq == NO_IRQ)) {
+	if ((!lp->rx_irq) || (!lp->tx_irq)) {
 		dev_err(&op->dev, "could not determine irqs\n");
 		rc = -ENOMEM;
 		goto err_iounmap_2;
-- 
1.7.0.4

