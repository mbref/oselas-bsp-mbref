From 2e2b961b9484f890c3d9a367ed1e375dcf09b3b9 Mon Sep 17 00:00:00 2001
From: Michal Simek <monstr@monstr.eu>
Date: Wed, 2 May 2012 14:31:50 +0200
Subject: [PATCH] zynq: Add support for GPIO

Support GPIO for zynq.

Signed-off-by: Michal Simek <monstr@monstr.eu>
---
 arch/arm/Kconfig                       |    1 +
 arch/arm/mach-zynq/include/mach/gpio.h |   69 ++++++++++++++++++++++++++++++++
 arch/arm/mach-zynq/include/mach/irqs.h |    3 +-
 3 files changed, 71 insertions(+), 2 deletions(-)
 create mode 100644 arch/arm/mach-zynq/include/mach/gpio.h

diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index 4ee779d..663a9d5 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -976,6 +976,7 @@ config ARCH_ZYNQ
 	select CPU_V7
 	select GENERIC_CLOCKEVENTS
 	select CLKDEV_LOOKUP
+	select ARCH_WANT_OPTIONAL_GPIOLIB
 	select ARM_GIC
 	select ARM_AMBA
 	select ICST
diff --git a/arch/arm/mach-zynq/include/mach/gpio.h b/arch/arm/mach-zynq/include/mach/gpio.h
new file mode 100644
index 0000000..51a7d33
--- /dev/null
+++ b/arch/arm/mach-zynq/include/mach/gpio.h
@@ -0,0 +1,69 @@
+/*
+ * Xilinx PSS GPIO Header File
+ * arch/arm/mach-xilinx/gpio.h
+ *
+ * 2009 (c) Xilinx, Inc.
+ *
+ * This program is free software; you can redistribute it and/or modify it under
+ * the terms of the GNU General Public License as published by the Free Software
+ * Foundation; either version 2 of the License, or (at your option) any later
+ * version.
+ *
+ * You should have received a copy of the GNU General Public License along with
+ * this program; if not, write to the Free Software Foundation, Inc., 675 Mass
+ * Ave, Cambridge, MA 02139, USA.
+ */
+
+#ifndef __ASM_ARCH_GPIO_H
+#define __ASM_ARCH_GPIO_H
+
+
+#define ARCH_NR_GPIOS		512
+#define XGPIOPS_IRQBASE		128
+
+struct xgpio_platform_data {
+        unsigned int            state;
+        unsigned int            dir;
+	unsigned int            width;
+};
+
+extern int gpio_direction_input(unsigned gpio);
+extern int gpio_direction_output(unsigned gpio, int value);
+extern int __gpio_get_value(unsigned gpio);
+extern void __gpio_set_value(unsigned gpio, int value);
+extern int __gpio_cansleep(unsigned gpio);
+
+static inline int gpio_get_value(unsigned gpio)
+{
+	return __gpio_get_value(gpio);
+}
+
+static inline void gpio_set_value(unsigned gpio, int value)
+{
+	__gpio_set_value(gpio, value);
+}
+
+static inline int gpio_cansleep(unsigned int gpio)
+{
+	return __gpio_cansleep(gpio);
+}
+
+#include <asm-generic/gpio.h>
+
+static inline unsigned int gpio_to_irq(unsigned int pin)
+{
+	return pin + XGPIOPS_IRQBASE;
+}
+
+static inline unsigned int irq_to_gpio(unsigned int irq)
+{
+	return irq - XGPIOPS_IRQBASE;
+}
+
+void xgpiodf_set_bypass_mode(struct gpio_chip *chip, unsigned int pin);
+void xgpiodf_set_normal_mode(struct gpio_chip *chip, unsigned int pin);
+
+#endif /* __ASM_ARCH_GPIO_H */
+
+
+
diff --git a/arch/arm/mach-zynq/include/mach/irqs.h b/arch/arm/mach-zynq/include/mach/irqs.h
index 32c11dc..9757fea 100644
--- a/arch/arm/mach-zynq/include/mach/irqs.h
+++ b/arch/arm/mach-zynq/include/mach/irqs.h
@@ -15,8 +15,7 @@
 #ifndef __MACH_IRQS_H
 #define __MACH_IRQS_H
 
-#define ARCH_NR_GPIOS	118
-#define NR_IRQS		(128 + ARCH_NR_GPIOS)
+#define NR_IRQS		128
 
 #define IRQ_LOCALTIMER	29
 
-- 
1.7.0.4

