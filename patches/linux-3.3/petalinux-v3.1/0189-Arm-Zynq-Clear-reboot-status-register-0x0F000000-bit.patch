From bf569169cb291190a03bb8dd77cca66d09709948 Mon Sep 17 00:00:00 2001
From: Jason Wu <jason.wu@petalogix.com>
Date: Wed, 30 May 2012 10:06:45 +1000
Subject: [PATCH] Arm:Zynq: Clear reboot status register 0x0F000000 bit

FSBL check the reboot status register 0x0F000000 bits to decide
which the partition it should work on. If the bitstream is presented in
the partition, it programs the bistream.

This commit is a temporary workaround to reload the bitstream after
linux reset.

Signed-off-by: Jason Wu <jason.wu@petalogix.com>
---
 arch/arm/mach-zynq/slcr.c |    7 +++++++
 1 files changed, 7 insertions(+), 0 deletions(-)

diff --git a/arch/arm/mach-zynq/slcr.c b/arch/arm/mach-zynq/slcr.c
index af36d4a..89b21d7 100644
--- a/arch/arm/mach-zynq/slcr.c
+++ b/arch/arm/mach-zynq/slcr.c
@@ -62,6 +62,7 @@
 #define XSLCR_DEVC_RST_CTRL_OFFSET	0x23C /* Dev Cfg SW Reset Control */
 #define XSLCR_FPGA_RST_CTRL_OFFSET	0x240 /* FPGA Software Reset Control */
 #define XSLCR_A9_CPU_RST_CTRL		0x244 /* CPU Software Reset Control */
+#define XSLCR_REBOOT_STATUS		0x258 /* PS Reboot Status */
 #define XSLCR_MIO_PIN_00_OFFSET		0x700 /* MIO PIN0 control register */
 #define XSLCR_LVL_SHFTR_EN_OFFSET	0x900 /* Level Shifters Enable */
 
@@ -1597,6 +1598,12 @@ void xslcr_system_reset(void)
 	 * functions or there's a lockup?
 	 */
 	xslcr_writereg(slcr->regs + XSLCR_UNLOCK, 0xDF0D);
+
+	/* Clear 0x0F000000 bits of reboot status register to workaround
+	 * the FSBL not loading the bitstream after soft-reboot
+	 * This is a temporary solution until we know more.
+	 */
+	xslcr_writereg(slcr->regs + XSLCR_REBOOT_STATUS, xslcr_read(slcr->regs + XSLCR_REBOOT_STATUS) & 0xF0FFFFFF);
 	xslcr_writereg(slcr->regs + XSLCR_PSS_RST_CTRL_OFFSET, 1);
 }
 
-- 
1.7.0.4

