From bfa74f3127cac92f6d21fe871cdc7b420a78f79d Mon Sep 17 00:00:00 2001
From: John Linn <john.linn@xilinx.com>
Date: Fri, 20 May 2011 16:12:23 -0600
Subject: [PATCH] ARM: Xilinx: Adding local timer to support SMP

Each Cortex A9 CPU has a local timer in it and it can
be used during SMP mode. This is using the local timer
code from the versatile platform.

Signed-off-by: John Linn <john.linn@xilinx.com>
---
 arch/arm/mach-zynq/include/mach/irqs.h     |    2 +
 arch/arm/mach-zynq/include/mach/zynq_soc.h |    1 +
 arch/arm/mach-zynq/localtimer.c            |   37 ++++++++++++++++++++++++++++
 arch/arm/mach-zynq/timer.c                 |    5 ++++
 4 files changed, 45 insertions(+), 0 deletions(-)
 create mode 100644 arch/arm/mach-zynq/localtimer.c

diff --git a/arch/arm/mach-zynq/include/mach/irqs.h b/arch/arm/mach-zynq/include/mach/irqs.h
index 5fb04fd..32c11dc 100644
--- a/arch/arm/mach-zynq/include/mach/irqs.h
+++ b/arch/arm/mach-zynq/include/mach/irqs.h
@@ -18,4 +18,6 @@
 #define ARCH_NR_GPIOS	118
 #define NR_IRQS		(128 + ARCH_NR_GPIOS)
 
+#define IRQ_LOCALTIMER	29
+
 #endif
diff --git a/arch/arm/mach-zynq/include/mach/zynq_soc.h b/arch/arm/mach-zynq/include/mach/zynq_soc.h
index d0d3f8f..e2a399a 100644
--- a/arch/arm/mach-zynq/include/mach/zynq_soc.h
+++ b/arch/arm/mach-zynq/include/mach/zynq_soc.h
@@ -36,6 +36,7 @@
 #define TTC0_BASE			IOMEM(TTC0_VIRT)
 #define SCU_PERIPH_BASE			IOMEM(SCU_PERIPH_VIRT)
 #define SCU_GIC_CPU_BASE		(SCU_PERIPH_BASE + 0x100)
+#define SCU_CPU_TIMER_BASE		(SCU_PERIPH_BASE + 0x600)
 #define SCU_GIC_DIST_BASE		(SCU_PERIPH_BASE + 0x1000)
 #define PL310_L2CC_BASE			IOMEM(PL310_L2CC_VIRT)
 
diff --git a/arch/arm/mach-zynq/localtimer.c b/arch/arm/mach-zynq/localtimer.c
new file mode 100644
index 0000000..e8d54b7
--- /dev/null
+++ b/arch/arm/mach-zynq/localtimer.c
@@ -0,0 +1,37 @@
+/*
+ * arch/arm/mach-zynq/localtimer.c
+ *
+ * Both cortex-a9 cores have their own timer in it's CPU domain.
+ *
+ * Copyright (C) 2011 Xilinx, Inc.
+ *
+ * This file is based on arch/arm/plat-versatile/localtimer.c
+ *
+ * Copyright (C) 2002 ARM Ltd.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+#include <linux/init.h>
+#include <linux/clockchips.h>
+#include <asm/smp_twd.h>
+#include <asm/localtimer.h>
+#include <mach/zynq_soc.h>
+
+/*
+ * Setup the local clock events for a CPU.
+ */
+int __cpuinit local_timer_setup(struct clock_event_device *evt)
+{
+	twd_base = SCU_CPU_TIMER_BASE;
+
+	evt->irq = 29;
+	twd_timer_setup(evt);
+	return 0;
+}
diff --git a/arch/arm/mach-zynq/timer.c b/arch/arm/mach-zynq/timer.c
index c2c96cc..e084f73 100644
--- a/arch/arm/mach-zynq/timer.c
+++ b/arch/arm/mach-zynq/timer.c
@@ -25,6 +25,8 @@
 #include <linux/io.h>
 
 #include <asm/mach/time.h>
+#include <asm/smp_twd.h>
+
 #include <mach/zynq_soc.h>
 #include "common.h"
 
@@ -271,6 +273,9 @@ static struct clock_event_device xttcpss_clockevent = {
  **/
 static void __init xttcpss_timer_init(void)
 {
+#ifdef CONFIG_HAVE_ARM_TWD
+	twd_base = SCU_CPU_TIMER_BASE;
+#endif
 	xttcpss_timer_hardware_init();
 	clocksource_register_hz(&clocksource_xttcpss, TIMER_RATE);
 
-- 
1.7.0.4

